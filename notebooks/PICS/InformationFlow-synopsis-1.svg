<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 9.0.0 (20230911.1827)
 -->
<!-- Pages: 1 -->
<svg width="270pt" height="510pt"
 viewBox="0.00 0.00 269.62 509.75" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 505.75)">
<g id="a_graph0"><a xlink:title="tstr class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-505.75 265.62,-505.75 265.62,4 -4,4"/>
</a>
</g>
<!-- tstr -->
<g id="node1" class="node">
<title>tstr</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class tstr:&#10;Wrapper for strings, saving taint information">
<polygon fill="none" stroke="black" points="0,-0.5 0,-428.25 124,-428.25 124,-0.5 0,-0.5"/>
<text text-anchor="start" x="51.12" y="-411.95" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">tstr</text>
<polyline fill="none" stroke="black" points="0,-402.25 124,-402.25"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="tstr">
<g id="a_node1_1"><a xlink:href="#" xlink:title="__add__(self, *args, **kwargs):&#10;Return self+value.">
<text text-anchor="start" x="8" y="-389.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__add__()</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="__format__(self, *args, **kwargs):&#10;Return a formatted version of the string as described by format_spec.">
<text text-anchor="start" x="8" y="-378.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__format__()</text>
</a>
</g>
<g id="a_node1_3"><a xlink:href="#" xlink:title="__getitem__(self, *args, **kwargs):&#10;Return self[key].">
<text text-anchor="start" x="8" y="-367.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__getitem__()</text>
</a>
</g>
<g id="a_node1_4"><a xlink:href="#" xlink:title="__init__(self, value: Any, taint: Any = None, **kwargs) &#45;&gt; None:&#10;Constructor.&#10;`value` is the string value the `tstr` object is to be constructed from.&#10;`taint` is an (optional) taint to be propagated to derived strings.">
<text text-anchor="start" x="8" y="-356" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="__mod__(self, *args, **kwargs):&#10;Return self%value.">
<text text-anchor="start" x="8" y="-344.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__mod__()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="__mul__(self, *args, **kwargs):&#10;Return self*value.">
<text text-anchor="start" x="8" y="-333.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__mul__()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="__new__(cls, value, *args, **kw):&#10;Create a tstr() instance. Used internally.">
<text text-anchor="start" x="8" y="-322.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__new__()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="__radd__(self, value):&#10;Return value + self, as a `tstr` object">
<text text-anchor="start" x="8" y="-311" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__radd__()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="__repr__(self) &#45;&gt; tstr:&#10;Return a representation.">
<text text-anchor="start" x="8" y="-299.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node1_10"><a xlink:href="#" xlink:title="__rmod__(self, *args, **kwargs):&#10;Return value%self.">
<text text-anchor="start" x="8" y="-288.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__rmod__()</text>
</a>
</g>
<g id="a_node1_11"><a xlink:href="#" xlink:title="__rmul__(self, *args, **kwargs):&#10;Return value*self.">
<text text-anchor="start" x="8" y="-277.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__rmul__()</text>
</a>
</g>
<g id="a_node1_12"><a xlink:href="#" xlink:title="__str__(self) &#45;&gt; str:&#10;Convert to string">
<text text-anchor="start" x="8" y="-266" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__str__()</text>
</a>
</g>
<g id="a_node1_13"><a xlink:href="#" xlink:title="capitalize(self, *args, **kwargs):&#10;Return a capitalized version of the string.&#10;&#10;More specifically, make the first character have upper case and the rest lower&#10;case.">
<text text-anchor="start" x="8" y="-254.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">capitalize()</text>
</a>
</g>
<g id="a_node1_14"><a xlink:href="#" xlink:title="casefold(self, *args, **kwargs):&#10;Return a version of the string suitable for caseless comparisons.">
<text text-anchor="start" x="8" y="-243.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">casefold()</text>
</a>
</g>
<g id="a_node1_15"><a xlink:href="#" xlink:title="center(self, *args, **kwargs):&#10;Return a centered string of length width.&#10;&#10;Padding is done using the specified fill character (default is a space).">
<text text-anchor="start" x="8" y="-232.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">center()</text>
</a>
</g>
<g id="a_node1_16"><a xlink:href="#" xlink:title="clear_taint(self):&#10;Remove taint">
<text text-anchor="start" x="8" y="-221" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">clear_taint()</text>
</a>
</g>
<g id="a_node1_17"><a xlink:href="#" xlink:title="encode(self, *args, **kwargs):&#10;Encode the string using the codec registered for encoding.&#10;&#10;encoding&#10;The encoding in which to encode the string.&#10;errors&#10;The error handling scheme to use for encoding errors.&#10;The default is &#39;strict&#39; meaning that encoding errors raise a&#10;UnicodeEncodeError. &#160;Other possible values are &#39;ignore&#39;, &#39;replace&#39; and&#10;&#39;xmlcharrefreplace&#39; as well as any other name registered with&#10;codecs.register_error that can handle UnicodeEncodeErrors.">
<text text-anchor="start" x="8" y="-209.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">encode()</text>
</a>
</g>
<g id="a_node1_18"><a xlink:href="#" xlink:title="expandtabs(self, *args, **kwargs):&#10;Return a copy where all tab characters are expanded using spaces.&#10;&#10;If tabsize is not given, a tab size of 8 characters is assumed.">
<text text-anchor="start" x="8" y="-198.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">expandtabs()</text>
</a>
</g>
<g id="a_node1_19"><a xlink:href="#" xlink:title="format(self, *args, **kwargs):&#10;S.format(*args, **kwargs) &#45;&gt; str&#10;&#10;Return a formatted version of S, using substitutions from args and kwargs.&#10;The substitutions are identified by braces (&#39;{&#39; and &#39;}&#39;).">
<text text-anchor="start" x="8" y="-187.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">format()</text>
</a>
</g>
<g id="a_node1_20"><a xlink:href="#" xlink:title="format_map(self, *args, **kwargs):&#10;S.format_map(mapping) &#45;&gt; str&#10;&#10;Return a formatted version of S, using substitutions from mapping.&#10;The substitutions are identified by braces (&#39;{&#39; and &#39;}&#39;).">
<text text-anchor="start" x="8" y="-176" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">format_map()</text>
</a>
</g>
<g id="a_node1_21"><a xlink:href="#" xlink:title="has_taint(self):&#10;Check if taint is present">
<text text-anchor="start" x="8" y="-164.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">has_taint()</text>
</a>
</g>
<g id="a_node1_22"><a xlink:href="#" xlink:title="join(self, *args, **kwargs):&#10;Concatenate any number of strings.&#10;&#10;The string whose method is called is inserted in between each given string.&#10;The result is returned as a new string.&#10;&#10;Example: &#39;.&#39;.join([&#39;ab&#39;, &#39;pq&#39;, &#39;rs&#39;]) &#45;&gt; &#39;ab.pq.rs&#39;">
<text text-anchor="start" x="8" y="-153.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">join()</text>
</a>
</g>
<g id="a_node1_23"><a xlink:href="#" xlink:title="ljust(self, *args, **kwargs):&#10;Return a left&#45;justified string of length width.&#10;&#10;Padding is done using the specified fill character (default is a space).">
<text text-anchor="start" x="8" y="-142.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">ljust()</text>
</a>
</g>
<g id="a_node1_24"><a xlink:href="#" xlink:title="lower(self, *args, **kwargs):&#10;Return a copy of the string converted to lowercase.">
<text text-anchor="start" x="8" y="-131" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">lower()</text>
</a>
</g>
<g id="a_node1_25"><a xlink:href="#" xlink:title="lstrip(self, *args, **kwargs):&#10;Return a copy of the string with leading whitespace removed.&#10;&#10;If chars is given and not None, remove characters in chars instead.">
<text text-anchor="start" x="8" y="-119.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">lstrip()</text>
</a>
</g>
<g id="a_node1_26"><a xlink:href="#" xlink:title="make_str_wrapper(fun):&#10;Make `fun` (a `str` method) a method in `tstr`">
<text text-anchor="start" x="8" y="-108.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">make_str_wrapper()</text>
</a>
</g>
<g id="a_node1_27"><a xlink:href="#" xlink:title="replace(self, *args, **kwargs):&#10;Return a copy with all occurrences of substring old replaced by new.&#10;&#10;count&#10;Maximum number of occurrences to replace.&#10;&#45;1 (the default value) means replace all occurrences.&#10;&#10;If the optional argument count is given, only the first count occurrences are&#10;replaced.">
<text text-anchor="start" x="8" y="-97.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">replace()</text>
</a>
</g>
<g id="a_node1_28"><a xlink:href="#" xlink:title="rjust(self, *args, **kwargs):&#10;Return a right&#45;justified string of length width.&#10;&#10;Padding is done using the specified fill character (default is a space).">
<text text-anchor="start" x="8" y="-86" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">rjust()</text>
</a>
</g>
<g id="a_node1_29"><a xlink:href="#" xlink:title="rstrip(self, *args, **kwargs):&#10;Return a copy of the string with trailing whitespace removed.&#10;&#10;If chars is given and not None, remove characters in chars instead.">
<text text-anchor="start" x="8" y="-74.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">rstrip()</text>
</a>
</g>
<g id="a_node1_30"><a xlink:href="#" xlink:title="strip(self, *args, **kwargs):&#10;Return a copy of the string with leading and trailing whitespace removed.&#10;&#10;If chars is given and not None, remove characters in chars instead.">
<text text-anchor="start" x="8" y="-63.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">strip()</text>
</a>
</g>
<g id="a_node1_31"><a xlink:href="#" xlink:title="swapcase(self, *args, **kwargs):&#10;Convert uppercase characters to lowercase and lowercase characters to uppercase.">
<text text-anchor="start" x="8" y="-52.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">swapcase()</text>
</a>
</g>
<g id="a_node1_32"><a xlink:href="#" xlink:title="title(self, *args, **kwargs):&#10;Return a version of the string where each word is titlecased.&#10;&#10;More specifically, words start with uppercased characters and all remaining&#10;cased characters have lower case.">
<text text-anchor="start" x="8" y="-41" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">title()</text>
</a>
</g>
<g id="a_node1_33"><a xlink:href="#" xlink:title="translate(self, *args, **kwargs):&#10;Replace each character in the string using the given translation table.&#10;&#10;table&#10;Translation table, which must be a mapping of Unicode ordinals to&#10;Unicode ordinals, strings, or None.&#10;&#10;The table must implement lookup/indexing via __getitem__, for instance a&#10;dictionary or list. &#160;If this operation raises LookupError, the character is&#10;left untouched. &#160;Characters mapped to None are deleted.">
<text text-anchor="start" x="8" y="-29.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">translate()</text>
</a>
</g>
<g id="a_node1_34"><a xlink:href="#" xlink:title="upper(self, *args, **kwargs):&#10;Return a copy of the string converted to uppercase.">
<text text-anchor="start" x="8" y="-18.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">upper()</text>
</a>
</g>
<g id="a_node1_35"><a xlink:href="#" xlink:title="create(self, s)">
<text text-anchor="start" x="8" y="-6.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">create()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- str -->
<g id="node2" class="node">
<title>str</title>
<g id="a_node2"><a xlink:href="builtins.ipynb" xlink:title="class str:&#10;str(object=&#39;&#39;) &#45;&gt; str&#10;str(bytes_or_buffer[, encoding[, errors]]) &#45;&gt; str&#10;&#10;Create a new string object from the given object. If encoding or&#10;errors is specified, then the object must expose a data buffer&#10;that will be decoded using the given encoding and error handler.&#10;Otherwise, returns the result of object.__str__() (if defined)&#10;or repr(object).&#10;encoding defaults to sys.getdefaultencoding().&#10;errors defaults to &#39;strict&#39;.">
<polygon fill="none" stroke="black" points="35,-465.25 35,-501.25 89,-501.25 89,-465.25 35,-465.25"/>
<text text-anchor="start" x="53.5" y="-479.95" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">str</text>
</a>
</g>
</g>
<!-- tstr&#45;&gt;str -->
<g id="edge1" class="edge">
<title>tstr&#45;&gt;str</title>
<path fill="none" stroke="black" d="M62,-428.56C62,-437.76 62,-446.16 62,-453.45"/>
<polygon fill="none" stroke="black" points="58.5,-453.43 62,-463.43 65.5,-453.43 58.5,-453.43"/>
</g>
<!-- Legend -->
<g id="node3" class="node">
<title>Legend</title>
<text text-anchor="start" x="142.38" y="-230.38" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="10.00" fill="#b03a2e">Legend</text>
<text text-anchor="start" x="142.38" y="-220.38" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="148.38" y="-220.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="142.38" y="-210.38" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="148.38" y="-210.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="142.38" y="-200.38" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="148.38" y="-200.38" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="142.38" y="-191.32" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
