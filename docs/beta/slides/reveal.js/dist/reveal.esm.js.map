{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// Copy the presentation-wide background to each page\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tconst scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Triggers for each fragment group\n\t\t\t\t...fragmentGroups.map( ( fragments, i ) => ({\n\t\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tpage.slideElement.classList.remove( 'present' );\n\t\t\tpage.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( keyCode === 191 && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.0.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Responsively turn on the scroll mode if there is an activation\n\t\t\t\t// width configured. Ignore if we're configured to always be in\n\t\t\t\t// scroll mode.\n\t\t\t\tif( typeof config.scrollActivationWidth === 'number' && config.view !== 'scroll' ) {\n\t\t\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\t\t\tif( !scrollView.isActive() ) scrollView.activate();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","filename","innerHTML","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","getSlides","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","parseInt","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","contentContainer","shouldAutoAnimateBetween","page","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","documentElement","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","includes","togglePause","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","viewport","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","isVertical","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}