<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 9.0.0 (20230911.1827)
 -->
<!-- Pages: 1 -->
<svg width="252pt" height="540pt"
 viewBox="0.00 0.00 251.62 540.25" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 536.25)">
<g id="a_graph0"><a xlink:title="ostr class hierarchy">
<polygon fill="white" stroke="none" points="-4,4 -4,-536.25 247.62,-536.25 247.62,4 -4,4"/>
</a>
</g>
<!-- ostr -->
<g id="node1" class="node">
<title>ostr</title>
<g id="a_node1"><a xlink:href="#" xlink:title="class ostr:&#10;Wrapper for strings, saving taint and origin information">
<polygon fill="none" stroke="black" points="0,-0.5 0,-458.75 106,-458.75 106,-0.5 0,-0.5"/>
<text text-anchor="start" x="41" y="-442.45" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">ostr</text>
<polyline fill="none" stroke="black" points="0,-432.75 106,-432.75"/>
<g id="a_node1_0"><a xlink:href="#" xlink:title="ostr">
<g id="a_node1_1"><a xlink:href="#" xlink:title="DEFAULT_ORIGIN = 0">
<text text-anchor="start" x="11" y="-419.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">DEFAULT_ORIGIN</text>
</a>
</g>
<g id="a_node1_2"><a xlink:href="#" xlink:title="UNKNOWN_ORIGIN = &#45;1">
<text text-anchor="start" x="11" y="-408" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">UNKNOWN_ORIGIN</text>
</a>
</g>
</a>
</g>
<polyline fill="none" stroke="black" points="0,-402.25 106,-402.25"/>
<g id="a_node1_3"><a xlink:href="#" xlink:title="ostr">
<g id="a_node1_4"><a xlink:href="#" xlink:title="__add__(self, other):&#10;Return self+value.">
<text text-anchor="start" x="8" y="-389.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__add__()</text>
</a>
</g>
<g id="a_node1_5"><a xlink:href="#" xlink:title="__getitem__(self, key):&#10;Return self[key].">
<text text-anchor="start" x="8" y="-378.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__getitem__()</text>
</a>
</g>
<g id="a_node1_6"><a xlink:href="#" xlink:title="__init__(self, value: Any, taint: Any = None, origin: Union[int, List[int], NoneType] = None, **kwargs) &#45;&gt; None:&#10;Constructor.&#10;`value` is the string value the `ostr` object is to be constructed from.&#10;`taint` is an (optional) taint to be propagated to derived strings.&#10;`origin` (optional) is either&#10;&#45; an integer denoting the index of the first character in `value`, or&#10;&#45; a list of integers denoting the origins of the characters in `value`,">
<text text-anchor="start" x="8" y="-367.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__init__()</text>
</a>
</g>
<g id="a_node1_7"><a xlink:href="#" xlink:title="__iter__(self):&#10;Implement iter(self).">
<text text-anchor="start" x="8" y="-356" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__iter__()</text>
</a>
</g>
<g id="a_node1_8"><a xlink:href="#" xlink:title="__mod__(self, s):&#10;Return self%value.">
<text text-anchor="start" x="8" y="-344.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__mod__()</text>
</a>
</g>
<g id="a_node1_9"><a xlink:href="#" xlink:title="__new__(cls, value, *args, **kw):&#10;Create an ostr() instance. Used internally.">
<text text-anchor="start" x="8" y="-333.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__new__()</text>
</a>
</g>
<g id="a_node1_10"><a xlink:href="#" xlink:title="__repr__(self):&#10;Return repr(self).">
<text text-anchor="start" x="8" y="-322.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__repr__()</text>
</a>
</g>
<g id="a_node1_11"><a xlink:href="#" xlink:title="__rmod__(self, s):&#10;Return value%self.">
<text text-anchor="start" x="8" y="-311" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__rmod__()</text>
</a>
</g>
<g id="a_node1_12"><a xlink:href="#" xlink:title="__str__(self):&#10;Return str(self).">
<text text-anchor="start" x="8" y="-299.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">__str__()</text>
</a>
</g>
<g id="a_node1_13"><a xlink:href="#" xlink:title="capitalize(self):&#10;Return a capitalized version of the string.&#10;&#10;More specifically, make the first character have upper case and the rest lower&#10;case.">
<text text-anchor="start" x="8" y="-288.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">capitalize()</text>
</a>
</g>
<g id="a_node1_14"><a xlink:href="#" xlink:title="expandtabs(self, n=8):&#10;Return a copy where all tab characters are expanded using spaces.&#10;&#10;If tabsize is not given, a tab size of 8 characters is assumed.">
<text text-anchor="start" x="8" y="-277.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">expandtabs()</text>
</a>
</g>
<g id="a_node1_15"><a xlink:href="#" xlink:title="join(self, iterable):&#10;Concatenate any number of strings.&#10;&#10;The string whose method is called is inserted in between each given string.&#10;The result is returned as a new string.&#10;&#10;Example: &#39;.&#39;.join([&#39;ab&#39;, &#39;pq&#39;, &#39;rs&#39;]) &#45;&gt; &#39;ab.pq.rs&#39;">
<text text-anchor="start" x="8" y="-266" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">join()</text>
</a>
</g>
<g id="a_node1_16"><a xlink:href="#" xlink:title="ljust(self, width, fillchar=&#39; &#39;):&#10;Return a left&#45;justified string of length width.&#10;&#10;Padding is done using the specified fill character (default is a space).">
<text text-anchor="start" x="8" y="-254.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">ljust()</text>
</a>
</g>
<g id="a_node1_17"><a xlink:href="#" xlink:title="lower(self):&#10;Return a copy of the string converted to lowercase.">
<text text-anchor="start" x="8" y="-243.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">lower()</text>
</a>
</g>
<g id="a_node1_18"><a xlink:href="#" xlink:title="lstrip(self, cl=None):&#10;Return a copy of the string with leading whitespace removed.&#10;&#10;If chars is given and not None, remove characters in chars instead.">
<text text-anchor="start" x="8" y="-232.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">lstrip()</text>
</a>
</g>
<g id="a_node1_19"><a xlink:href="#" xlink:title="partition(self, sep):&#10;Partition the string into three parts using the given separator.&#10;&#10;This will search for the separator in the string. &#160;If the separator is found,&#10;returns a 3&#45;tuple containing the part before the separator, the separator&#10;itself, and the part after it.&#10;&#10;If the separator is not found, returns a 3&#45;tuple containing the original string&#10;and two empty strings.">
<text text-anchor="start" x="8" y="-221" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">partition()</text>
</a>
</g>
<g id="a_node1_20"><a xlink:href="#" xlink:title="replace(self, a, b, n=None):&#10;Return a copy with all occurrences of substring old replaced by new.&#10;&#10;count&#10;Maximum number of occurrences to replace.&#10;&#45;1 (the default value) means replace all occurrences.&#10;&#10;If the optional argument count is given, only the first count occurrences are&#10;replaced.">
<text text-anchor="start" x="8" y="-209.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">replace()</text>
</a>
</g>
<g id="a_node1_21"><a xlink:href="#" xlink:title="rjust(self, width, fillchar=&#39; &#39;):&#10;Return a right&#45;justified string of length width.&#10;&#10;Padding is done using the specified fill character (default is a space).">
<text text-anchor="start" x="8" y="-198.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">rjust()</text>
</a>
</g>
<g id="a_node1_22"><a xlink:href="#" xlink:title="rpartition(self, sep):&#10;Partition the string into three parts using the given separator.&#10;&#10;This will search for the separator in the string, starting at the end. If&#10;the separator is found, returns a 3&#45;tuple containing the part before the&#10;separator, the separator itself, and the part after it.&#10;&#10;If the separator is not found, returns a 3&#45;tuple containing two empty strings&#10;and the original string.">
<text text-anchor="start" x="8" y="-187.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">rpartition()</text>
</a>
</g>
<g id="a_node1_23"><a xlink:href="#" xlink:title="rsplit(self, sep=None, maxsplit=&#45;1):&#10;Return a list of the words in the string, using sep as the delimiter string.&#10;&#10;sep&#10;The delimiter according which to split the string.&#10;None (the default value) means split according to any whitespace,&#10;and discard empty strings from the result.&#10;maxsplit&#10;Maximum number of splits to do.&#10;&#45;1 (the default value) means no limit.&#10;&#10;Splits are done starting at the end of the string and working to the front.">
<text text-anchor="start" x="8" y="-176" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">rsplit()</text>
</a>
</g>
<g id="a_node1_24"><a xlink:href="#" xlink:title="rstrip(self, cl=None):&#10;Return a copy of the string with trailing whitespace removed.&#10;&#10;If chars is given and not None, remove characters in chars instead.">
<text text-anchor="start" x="8" y="-164.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">rstrip()</text>
</a>
</g>
<g id="a_node1_25"><a xlink:href="#" xlink:title="split(self, sep=None, maxsplit=&#45;1):&#10;Return a list of the words in the string, using sep as the delimiter string.&#10;&#10;sep&#10;The delimiter according which to split the string.&#10;None (the default value) means split according to any whitespace,&#10;and discard empty strings from the result.&#10;maxsplit&#10;Maximum number of splits to do.&#10;&#45;1 (the default value) means no limit.">
<text text-anchor="start" x="8" y="-153.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">split()</text>
</a>
</g>
<g id="a_node1_26"><a xlink:href="#" xlink:title="strip(self, cl=None):&#10;Return a copy of the string with leading and trailing whitespace removed.&#10;&#10;If chars is given and not None, remove characters in chars instead.">
<text text-anchor="start" x="8" y="-142.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">strip()</text>
</a>
</g>
<g id="a_node1_27"><a xlink:href="#" xlink:title="swapcase(self):&#10;Convert uppercase characters to lowercase and lowercase characters to uppercase.">
<text text-anchor="start" x="8" y="-131" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">swapcase()</text>
</a>
</g>
<g id="a_node1_28"><a xlink:href="#" xlink:title="title(self):&#10;Return a version of the string where each word is titlecased.&#10;&#10;More specifically, words start with uppercased characters and all remaining&#10;cased characters have lower case.">
<text text-anchor="start" x="8" y="-119.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">title()</text>
</a>
</g>
<g id="a_node1_29"><a xlink:href="#" xlink:title="upper(self):&#10;Return a copy of the string converted to uppercase.">
<text text-anchor="start" x="8" y="-108.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">upper()</text>
</a>
</g>
<g id="a_node1_30"><a xlink:href="#" xlink:title="x(self, i=0):&#10;Extract substring at index/slice `i`">
<text text-anchor="start" x="8" y="-97.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="10.00">x()</text>
</a>
</g>
<g id="a_node1_31"><a xlink:href="#" xlink:title="__radd__(self, other)">
<text text-anchor="start" x="8" y="-85" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">__radd__()</text>
</a>
</g>
<g id="a_node1_32"><a xlink:href="#" xlink:title="_split_helper(self, sep, splitted)">
<text text-anchor="start" x="8" y="-73.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_split_helper()</text>
</a>
</g>
<g id="a_node1_33"><a xlink:href="#" xlink:title="_split_space(self, splitted)">
<text text-anchor="start" x="8" y="-62.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">_split_space()</text>
</a>
</g>
<g id="a_node1_34"><a xlink:href="#" xlink:title="clear_origin(self)">
<text text-anchor="start" x="8" y="-51.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">clear_origin()</text>
</a>
</g>
<g id="a_node1_35"><a xlink:href="#" xlink:title="clear_taint(self)">
<text text-anchor="start" x="8" y="-40" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">clear_taint()</text>
</a>
</g>
<g id="a_node1_36"><a xlink:href="#" xlink:title="create(self, res, origin=None)">
<text text-anchor="start" x="8" y="-28.75" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">create()</text>
</a>
</g>
<g id="a_node1_37"><a xlink:href="#" xlink:title="has_origin(self)">
<text text-anchor="start" x="8" y="-17.5" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">has_origin()</text>
</a>
</g>
<g id="a_node1_38"><a xlink:href="#" xlink:title="has_taint(self)">
<text text-anchor="start" x="8" y="-6.25" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="10.00">has_taint()</text>
</a>
</g>
</a>
</g>
</a>
</g>
</g>
<!-- str -->
<g id="node2" class="node">
<title>str</title>
<g id="a_node2"><a xlink:href="builtins.ipynb" xlink:title="class str:&#10;str(object=&#39;&#39;) &#45;&gt; str&#10;str(bytes_or_buffer[, encoding[, errors]]) &#45;&gt; str&#10;&#10;Create a new string object from the given object. If encoding or&#10;errors is specified, then the object must expose a data buffer&#10;that will be decoded using the given encoding and error handler.&#10;Otherwise, returns the result of object.__str__() (if defined)&#10;or repr(object).&#10;encoding defaults to sys.getdefaultencoding().&#10;errors defaults to &#39;strict&#39;.">
<polygon fill="none" stroke="black" points="26,-495.75 26,-531.75 80,-531.75 80,-495.75 26,-495.75"/>
<text text-anchor="start" x="44.5" y="-510.45" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="14.00" fill="#b03a2e">str</text>
</a>
</g>
</g>
<!-- ostr&#45;&gt;str -->
<g id="edge1" class="edge">
<title>ostr&#45;&gt;str</title>
<path fill="none" stroke="black" d="M53,-459.02C53,-468.27 53,-476.7 53,-483.99"/>
<polygon fill="none" stroke="black" points="49.5,-483.98 53,-493.98 56.5,-483.98 49.5,-483.98"/>
</g>
<!-- Legend -->
<g id="node3" class="node">
<title>Legend</title>
<text text-anchor="start" x="124.38" y="-245.62" font-family="Patua One, Helvetica, sans-serif" font-weight="bold" font-size="10.00" fill="#b03a2e">Legend</text>
<text text-anchor="start" x="124.38" y="-235.62" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="130.38" y="-235.62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-weight="bold" font-size="8.00">public_method()</text>
<text text-anchor="start" x="124.38" y="-225.62" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="130.38" y="-225.62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-size="8.00">private_method()</text>
<text text-anchor="start" x="124.38" y="-215.62" font-family="Patua One, Helvetica, sans-serif" font-size="10.00">• </text>
<text text-anchor="start" x="130.38" y="-215.62" font-family="'Fira Mono', 'Source Code Pro', 'Courier', monospace" font-style="italic" font-size="8.00">overloaded_method()</text>
<text text-anchor="start" x="124.38" y="-206.57" font-family="Helvetica,sans-Serif" font-size="9.00">Hover over names to see doc</text>
</g>
</g>
</svg>
